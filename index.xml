<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DEVIN&#39;s BLOG</title>
    <link>https://devin0x01.github.io/</link>
    <description>Recent content on DEVIN&#39;s BLOG</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 17 Jan 2024 15:05:25 +0800</lastBuildDate><atom:link href="https://devin0x01.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>VimScript笔记</title>
      <link>https://devin0x01.github.io/post/tools/vimscript%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Wed, 17 Jan 2024 15:05:25 +0800</pubDate>
      
      <guid>https://devin0x01.github.io/post/tools/vimscript%E7%AC%94%E8%AE%B0/</guid>
      <description>VimScript 五分钟入门（翻译） - 知乎 wsdjeg/vim-plugin-dev-guide: Vim 插件开发指南 基本语法:source %: %表示当前文件的路径 e #: 切换到最近编辑的另一个文件 expand() 将具有特殊意义的标记（</description>
    </item>
    
    <item>
      <title>C&#43;&#43;模板例子</title>
      <link>https://devin0x01.github.io/post/cpp/c&#43;&#43;%E6%A8%A1%E6%9D%BF%E4%BE%8B%E5%AD%90/</link>
      <pubDate>Thu, 02 Nov 2023 01:05:25 +0800</pubDate>
      
      <guid>https://devin0x01.github.io/post/cpp/c&#43;&#43;%E6%A8%A1%E6%9D%BF%E4%BE%8B%E5%AD%90/</guid>
      <description>1#include &amp;lt;vector&amp;gt; 2#include &amp;lt;type_traits&amp;gt; 3using namespace std; 4 5class AA {}; 6class BB {}; 7 8 9class Test { 10public: 11 template &amp;lt;class T, template &amp;lt;class&amp;gt; class Container, std::enable_if_t&amp;lt;std::is_same_v&amp;lt;T, int&amp;gt;&amp;gt; * = nullptr&amp;gt; 12 void f1(Container&amp;lt;T&amp;gt; &amp;amp;ret); 13 14 template&amp;lt;template&amp;lt;class&amp;gt; class Container&amp;gt; 15 void f2(Container&amp;lt;AA&amp;gt; *); 16 17 template&amp;lt;template&amp;lt;class&amp;gt; class Container&amp;gt; 18 void f3(Container&amp;lt;BB&amp;gt; *); 19}; 20 21 22template &amp;lt;class T, template &amp;lt;class&amp;gt; class Container, std::enable_if_t&amp;lt;std::is_same_v&amp;lt;T, int&amp;gt;&amp;gt; * = nullptr&amp;gt;</description>
    </item>
    
    <item>
      <title>clang-format配置教程</title>
      <link>https://devin0x01.github.io/post/tools/clang-format%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/</link>
      <pubDate>Tue, 29 Aug 2023 16:05:25 +0800</pubDate>
      
      <guid>https://devin0x01.github.io/post/tools/clang-format%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/</guid>
      <description>配置clang-formatQt Creator使用clang-format_利白的博客-CSDN博客 Git 如何将clang-formatting</description>
    </item>
    
    <item>
      <title>vim配置教程</title>
      <link>https://devin0x01.github.io/post/tools/vim%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/</link>
      <pubDate>Fri, 25 Aug 2023 16:05:25 +0800</pubDate>
      
      <guid>https://devin0x01.github.io/post/tools/vim%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/</guid>
      <description>编译vim9vim/vim: The official Vim repository 1./configure --with-luajit --enable-pythoninterp=yes --enable-python3interp=yes \ 2 --enable-multibyte --prefix=$HOME/.local/vim9 3make -j 4make install 插件1.vim-plug插件管理 junegunn/vim-plug: 🌺 Minimalist Vim Plugin Manager 1curl -fLo ~/.vim/autoload/plug.vim --create-dirs \ 2 https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim PlugInstall [name &amp;hellip;] PlugUpdate [name &amp;hellip;] PlugClean[!] PlugUpgrade: Upgrade vim-plug itself</description>
    </item>
    
    <item>
      <title>nvim配置教程</title>
      <link>https://devin0x01.github.io/post/tools/nvim%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/</link>
      <pubDate>Wed, 16 Aug 2023 16:05:25 +0800</pubDate>
      
      <guid>https://devin0x01.github.io/post/tools/nvim%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/</guid>
      <description>1.安装NerdFont字体ryanoasis/nerd-fonts: Iconic font aggregator How do I install fonts? - Ask Ubuntu bash - MobaXTerm Powerline Font Issue - Super User 没有root权限时，ttf文件</description>
    </item>
    
    <item>
      <title>指向成员函数的指针</title>
      <link>https://devin0x01.github.io/post/cpp/%E6%8C%87%E5%90%91%E6%88%90%E5%91%98%E5%87%BD%E6%95%B0%E7%9A%84%E6%8C%87%E9%92%88/</link>
      <pubDate>Tue, 15 Aug 2023 14:05:25 +0800</pubDate>
      
      <guid>https://devin0x01.github.io/post/cpp/%E6%8C%87%E5%90%91%E6%88%90%E5%91%98%E5%87%BD%E6%95%B0%E7%9A%84%E6%8C%87%E9%92%88/</guid>
      <description>c++ - How do I typedef a function pointer with the C++11 using syntax? - Stack Overflow 1#include &amp;lt;iostream&amp;gt; 2 3class A { 4public: 5 void display() { std::cout &amp;lt;&amp;lt; &amp;#34;A display&amp;#34; &amp;lt;&amp;lt; std::endl; } 6}; 7 8int main() { 9 typedef void (A::*PF1)(); 10 PF1 pf1 = &amp;amp;A::display; 11 A a1; 12 (a1.*pf1)(); 13 14 using PF2 = void (A::*)(); 15 PF2 pf2 = &amp;amp;A::display; 16 A* a2 =</description>
    </item>
    
    <item>
      <title>operator bool 函数</title>
      <link>https://devin0x01.github.io/post/cpp/operator-bool-%E5%87%BD%E6%95%B0/</link>
      <pubDate>Mon, 14 Aug 2023 16:05:25 +0800</pubDate>
      
      <guid>https://devin0x01.github.io/post/cpp/operator-bool-%E5%87%BD%E6%95%B0/</guid>
      <description>参考文档user-defined conversion function - cppreference.com The Safe Bool Idiom - 知乎 为什么operator bool()需要用explicit修饰?c++ - Why does declaring an operator bool() const member</description>
    </item>
    
    <item>
      <title>自建RSS服务</title>
      <link>https://devin0x01.github.io/post/linux_ops/%E8%87%AA%E5%BB%BArss%E6%9C%8D%E5%8A%A1/</link>
      <pubDate>Tue, 08 Aug 2023 16:05:25 +0800</pubDate>
      
      <guid>https://devin0x01.github.io/post/linux_ops/%E8%87%AA%E5%BB%BArss%E6%9C%8D%E5%8A%A1/</guid>
      <description>我的 RSS 最佳实践 1.部署Fresh RSS笔记｜Docker 快速搭建 FreshRSS | Jack‘s Space Docker 时区调整方案-腾讯云开发者社区-腾讯云 Android可以</description>
    </item>
    
    <item>
      <title>frp内网穿透配置教程</title>
      <link>https://devin0x01.github.io/post/linux_ops/frp%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/</link>
      <pubDate>Fri, 04 Aug 2023 16:05:25 +0800</pubDate>
      
      <guid>https://devin0x01.github.io/post/linux_ops/frp%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/</guid>
      <description>重要资料fatedier/frp - github 官方文档 | frp 司波图/自建内网穿透服务器 - 码云 1$ tree /opt/frp 2/opt/frp 3├── frpc 4├── frpc_full.ini 5├── frpc.ini 6├── frps 7├── frps_full.ini 8</description>
    </item>
    
    <item>
      <title>Photoshop按比例裁剪压缩图片</title>
      <link>https://devin0x01.github.io/post/office/photoshop%E6%8C%89%E6%AF%94%E4%BE%8B%E8%A3%81%E5%89%AA%E5%8E%8B%E7%BC%A9%E5%9B%BE%E7%89%87/</link>
      <pubDate>Thu, 03 Aug 2023 14:05:25 +0800</pubDate>
      
      <guid>https://devin0x01.github.io/post/office/photoshop%E6%8C%89%E6%AF%94%E4%BE%8B%E8%A3%81%E5%89%AA%E5%8E%8B%E7%BC%A9%E5%9B%BE%E7%89%87/</guid>
      <description>1.选择侧边栏的裁剪工具，然后修改裁剪比例，点击对号 2.点击 文件/存储为 菜单会跳出下面的对话框，可以修改图片的大小</description>
    </item>
    
    <item>
      <title>Systemd教程</title>
      <link>https://devin0x01.github.io/post/linux_ops/systemd%E6%95%99%E7%A8%8B/</link>
      <pubDate>Mon, 31 Jul 2023 16:05:25 +0800</pubDate>
      
      <guid>https://devin0x01.github.io/post/linux_ops/systemd%E6%95%99%E7%A8%8B/</guid>
      <description>Systemd 入门教程：实战篇 - 阮一峰的网络日志 配置文件 1$ systemctl cat sshd.service 2 3[Unit] 4Description=OpenSSH server daemon 5Documentation=man:sshd(8) man:sshd_config(5) 6After=network.target sshd-keygen.service 7Wants=sshd-keygen.service 8 9[Service] 10EnvironmentFile=/etc/sysconfig/sshd 11ExecStart=/usr/sbin/sshd -D $OPTIONS 12ExecReload=/bin/kill -HUP $MAINPID 13Type=simple 14KillMode=process 15Restart=on-failure 16RestartSec=42s 17 18[Install] 19WantedBy=multi-user.target Unit区块：启动顺序和依赖关系De</description>
    </item>
    
    <item>
      <title>Docker常用命令</title>
      <link>https://devin0x01.github.io/post/linux_ops/docker%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Mon, 31 Jul 2023 12:05:25 +0800</pubDate>
      
      <guid>https://devin0x01.github.io/post/linux_ops/docker%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid>
      <description>Docker — 从入门到实践 Docker Guide 清理Docker的container，image与volume · 零壹軒·笔记 docker 1docker info #docker配置信息 2docker inspect $cid #查看容器</description>
    </item>
    
    <item>
      <title>WireGuard配置教程</title>
      <link>https://devin0x01.github.io/post/linux_ops/wireguard%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/</link>
      <pubDate>Sun, 30 Jul 2023 12:10:05 +0800</pubDate>
      
      <guid>https://devin0x01.github.io/post/linux_ops/wireguard%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/</guid>
      <description>Run WireGuard VPN Server in Docker Container with Docker Compose - TechViewLeo &amp;ndash; 主要参考这个 基于Wireguard技术的虚拟个人网络搭建: 基于wireguard的内网穿透技术~ 搭建WireGua</description>
    </item>
    
    <item>
      <title>Docker内显示图形界面</title>
      <link>https://devin0x01.github.io/post/linux_ops/docker%E5%86%85%E6%98%BE%E7%A4%BA%E5%9B%BE%E5%BD%A2%E7%95%8C%E9%9D%A2/</link>
      <pubDate>Fri, 28 Jul 2023 16:05:25 +0800</pubDate>
      
      <guid>https://devin0x01.github.io/post/linux_ops/docker%E5%86%85%E6%98%BE%E7%A4%BA%E5%9B%BE%E5%BD%A2%E7%95%8C%E9%9D%A2/</guid>
      <description>关于X11x(7) - Linux man page Cygwin系列（十二）：了解X - 知乎 X11采用了C/S的架构，在其设计下，整个图形视窗系统主要分为3个部分： 1.X S</description>
    </item>
    
    <item>
      <title>CMake语法基础</title>
      <link>https://devin0x01.github.io/post/compile/cmake%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Wed, 26 Jul 2023 14:05:25 +0800</pubDate>
      
      <guid>https://devin0x01.github.io/post/compile/cmake%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/</guid>
      <description>基本表达式if — CMake 3.27.1 Documentation Cmake中的条件判断if/elseif/else - 简书 if(&amp;lt;constant&amp;gt;) True if the constant is 1, ON, YES, TRUE, Y, or a non-zero number (including floating point numbers). False if the constant is 0, OFF, NO, FALSE, N, IGNORE, NOTFOUND,</description>
    </item>
    
    <item>
      <title>target_link_libraries中的PRIVATE INTERFACE PUBLIC</title>
      <link>https://devin0x01.github.io/post/compile/target_link_libraries%E4%B8%AD%E7%9A%84private-interface-public/</link>
      <pubDate>Mon, 24 Jul 2023 18:05:25 +0800</pubDate>
      
      <guid>https://devin0x01.github.io/post/compile/target_link_libraries%E4%B8%AD%E7%9A%84private-interface-public/</guid>
      <description>CMake target_link_libraries Interface Dependencies - Stack Overflow CMake的链接选项：PRIVATE，INTERFACE，PUBLIC - 知乎 If you are creating a shared library and your source cpp files #include the headers of another library (Say, QtNetwork for example), but your header</description>
    </item>
    
    <item>
      <title>调用成员模板</title>
      <link>https://devin0x01.github.io/post/cpp/%E8%B0%83%E7%94%A8%E6%88%90%E5%91%98%E6%A8%A1%E6%9D%BF/</link>
      <pubDate>Thu, 20 Jul 2023 14:05:25 +0800</pubDate>
      
      <guid>https://devin0x01.github.io/post/cpp/%E8%B0%83%E7%94%A8%E6%88%90%E5%91%98%E6%A8%A1%E6%9D%BF/</guid>
      <description>C++访问成员模板需要加template关键字 1#include &amp;lt;iostream&amp;gt; 2using namespace std; 3 4class A { 5public: 6 template &amp;lt;typename TypeNum&amp;gt; 7 int getSize() 8 { 9 return sizeof(TypeNum); 10 } 11}; 12 13// 调用成员模板函数需要加template 14template</description>
    </item>
    
    <item>
      <title>vector的push_back与emplace_back</title>
      <link>https://devin0x01.github.io/post/cpp/vector%E7%9A%84push_back%E4%B8%8Eemplace_back/</link>
      <pubDate>Mon, 17 Jul 2023 14:05:25 +0800</pubDate>
      
      <guid>https://devin0x01.github.io/post/cpp/vector%E7%9A%84push_back%E4%B8%8Eemplace_back/</guid>
      <description>push_back与emplace_back 1#include &amp;lt;iostream&amp;gt; 2#include &amp;lt;vector&amp;gt; 3using namespace std; 4 5class A { 6public: 7 A() = default; 8 A(string name) : _name(name) { cout &amp;lt;&amp;lt; &amp;#34;ctor: &amp;#34; &amp;lt;&amp;lt; _name &amp;lt;&amp;lt; endl; } 9 ~A() { cout &amp;lt;&amp;lt; &amp;#34;dtor: &amp;#34; &amp;lt;&amp;lt; _name &amp;lt;&amp;lt; endl; } 10 // 拷贝构</description>
    </item>
    
    <item>
      <title>位域用法</title>
      <link>https://devin0x01.github.io/post/cpp/%E4%BD%8D%E5%9F%9F%E7%94%A8%E6%B3%95/</link>
      <pubDate>Thu, 13 Jul 2023 14:05:25 +0800</pubDate>
      
      <guid>https://devin0x01.github.io/post/cpp/%E4%BD%8D%E5%9F%9F%E7%94%A8%E6%B3%95/</guid>
      <description>如果有字段定义为int类型的话，那么符号位的判断需要特别注意。 例如：下面的 B::f2 字段是有符号类型，其符号位是f2的最高位，可以表示的范围是-64</description>
    </item>
    
    <item>
      <title>C&#43;&#43;17特性</title>
      <link>https://devin0x01.github.io/post/cpp/c&#43;&#43;17%E7%89%B9%E6%80%A7/</link>
      <pubDate>Sun, 18 Jun 2023 14:05:25 +0800</pubDate>
      
      <guid>https://devin0x01.github.io/post/cpp/c&#43;&#43;17%E7%89%B9%E6%80%A7/</guid>
      <description>构造函数模板推导在C++17前构造一个模板类对象需要指明类型： 1pair&amp;lt;int, double&amp;gt; p(1, 2.2); // before c++17 C++17就不需要特殊指定，直接可以推导出类型，代码如下： 1pair p(1, 2.2);</description>
    </item>
    
    <item>
      <title>C&#43;&#43;练习题</title>
      <link>https://devin0x01.github.io/post/cpp/c&#43;&#43;%E7%BB%83%E4%B9%A0%E9%A2%98/</link>
      <pubDate>Sun, 18 Jun 2023 14:05:25 +0800</pubDate>
      
      <guid>https://devin0x01.github.io/post/cpp/c&#43;&#43;%E7%BB%83%E4%B9%A0%E9%A2%98/</guid>
      <description>多态判断 Q1: 虚函数可以是内联的？ A1: 错误。内联是编译时刻决定的，虚函数是运行时刻动态决定的，所以虚函数不能是内联函数。虚函数前加上inline不</description>
    </item>
    
    <item>
      <title>cgdb配置</title>
      <link>https://devin0x01.github.io/post/compile/cgdb%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Sun, 18 Jun 2023 14:05:25 +0800</pubDate>
      
      <guid>https://devin0x01.github.io/post/compile/cgdb%E9%85%8D%E7%BD%AE/</guid>
      <description>1.安装1git clone git://github.com/cgdb/cgdb.git 2cd cgdb 3./autogen.sh 4./configure --prefix=/usr/local 5make 6sudo make install 7 8# 报错解决方法 9sudo apt-get install automake libncurses5-dev flex texinfo libreadline-dev 2.配置1vim ~/.cgdb/cgdbrc 2 3set ignorecaseset 4ts=4 5set wso=vertical 6set eld=shortarrow 7set hls 8map &amp;lt;F9&amp;gt; :until&amp;lt;cr&amp;gt; 3.快捷键 F5 - Send a run command to GDB.</description>
    </item>
    
    <item>
      <title>coredump配置</title>
      <link>https://devin0x01.github.io/post/compile/coredump%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Sun, 18 Jun 2023 14:05:25 +0800</pubDate>
      
      <guid>https://devin0x01.github.io/post/compile/coredump%E9%85%8D%E7%BD%AE/</guid>
      <description>1ulimit -c unlimited 2echo &amp;#34;1&amp;#34; &amp;gt; /proc/sys/kernel/core_uses_pid 3mkdir -p /opt/debug 4echo &amp;#34;/opt/debug/core-%e-%p-%t&amp;#34; &amp;gt; /proc/sys/kernel/core_pattern 5 6 7gdb &amp;lt;program&amp;gt; -c &amp;lt;coredump_file&amp;gt; 8up &amp;lt;n&amp;gt; #调用栈向上n次</description>
    </item>
    
    <item>
      <title>expect实现交互式输入</title>
      <link>https://devin0x01.github.io/post/shell/expect%E5%AE%9E%E7%8E%B0%E4%BA%A4%E4%BA%92%E5%BC%8F%E8%BE%93%E5%85%A5/</link>
      <pubDate>Sun, 18 Jun 2023 14:05:25 +0800</pubDate>
      
      <guid>https://devin0x01.github.io/post/shell/expect%E5%AE%9E%E7%8E%B0%E4%BA%A4%E4%BA%92%E5%BC%8F%E8%BE%93%E5%85%A5/</guid>
      <description>1.常用命令 选项： -c:执行脚本前先执行的命令，可多次使用。 -d:debug模式，可以在运行时输出一些诊断信息，与在脚本开始处使用exp_i</description>
    </item>
    
    <item>
      <title>Git常用命令</title>
      <link>https://devin0x01.github.io/post/tools/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Sun, 18 Jun 2023 14:05:25 +0800</pubDate>
      
      <guid>https://devin0x01.github.io/post/tools/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid>
      <description>1.git remote1关联远端仓库 2git remote add origin git@github.com:git_username/repository_name.git 3git remote remove origin 4 5git remote -v 2.git branch 1本地分支关联远程分支(目的是在执行git pull/push操作时就不需要指定对应</description>
    </item>
    
    <item>
      <title>Java基础</title>
      <link>https://devin0x01.github.io/post/java/java%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Sun, 18 Jun 2023 14:05:25 +0800</pubDate>
      
      <guid>https://devin0x01.github.io/post/java/java%E5%9F%BA%E7%A1%80/</guid>
      <description>数据类型INFINITY和NaN 1// INFINITY定义 2public static final double POSITIVE_INFINITY = 1.0 / 0.0; 3public static final double NEGATIVE_INFINITY = -1.0 / 0.0; 4 5public static final float POSITIVE_INFINITY = 1.0f / 0.0f; 6public static final float NEGATIVE_INFINITY = -1.0f / 0.0f; 7 8// 无穷大*</description>
    </item>
    
    <item>
      <title>Linux网络编程</title>
      <link>https://devin0x01.github.io/post/linux_dev/linux%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/</link>
      <pubDate>Sun, 18 Jun 2023 14:05:25 +0800</pubDate>
      
      <guid>https://devin0x01.github.io/post/linux_dev/linux%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/</guid>
      <description>查看端口占用情况 netstat -tunlp -t (tcp) 仅显示tcp相关选项 -u (udp) 仅显示udp相关选项 -n 拒绝显示列名，能显示数字的全部转化为数字 -l 仅显示出在listen(监听</description>
    </item>
    
    <item>
      <title>Notepad&#43;&#43;替换</title>
      <link>https://devin0x01.github.io/post/tools/notepad&#43;&#43;%E6%9B%BF%E6%8D%A2/</link>
      <pubDate>Sun, 18 Jun 2023 14:05:25 +0800</pubDate>
      
      <guid>https://devin0x01.github.io/post/tools/notepad&#43;&#43;%E6%9B%BF%E6%8D%A2/</guid>
      <description>\1表示匹配的第一组括号</description>
    </item>
    
    <item>
      <title>Qt开发总结篇一</title>
      <link>https://devin0x01.github.io/post/qt/qt%E5%BC%80%E5%8F%91%E6%80%BB%E7%BB%93%E7%AF%87%E4%B8%80/</link>
      <pubDate>Sun, 18 Jun 2023 14:05:25 +0800</pubDate>
      
      <guid>https://devin0x01.github.io/post/qt/qt%E5%BC%80%E5%8F%91%E6%80%BB%E7%BB%93%E7%AF%87%E4%B8%80/</guid>
      <description>GUI界面限制输入的内容1QValidator *validator = new QIntValidator(100, 999, this); 2// 这样文本框只能输入100~999之间的数字 3ui-&amp;gt;lineEdit-&amp;gt;setValidator(validator); 显示格式控制1ui-&amp;gt;text</description>
    </item>
    
    <item>
      <title>Terminal快捷键</title>
      <link>https://devin0x01.github.io/post/tools/terminal%E5%BF%AB%E6%8D%B7%E9%94%AE/</link>
      <pubDate>Sun, 18 Jun 2023 14:05:25 +0800</pubDate>
      
      <guid>https://devin0x01.github.io/post/tools/terminal%E5%BF%AB%E6%8D%B7%E9%94%AE/</guid>
      <description>命令行快速移动光标Ctrl+A/E 行首/行末 Alt+F/B 按单词前后移动 Alt . 上条命令行的最后一个参数 Ctrl+W/K 删除光标前后的内容</description>
    </item>
    
    <item>
      <title>共享库搜索路径</title>
      <link>https://devin0x01.github.io/post/compile/%E5%85%B1%E4%BA%AB%E5%BA%93%E6%90%9C%E7%B4%A2%E8%B7%AF%E5%BE%84/</link>
      <pubDate>Sun, 18 Jun 2023 14:05:25 +0800</pubDate>
      
      <guid>https://devin0x01.github.io/post/compile/%E5%85%B1%E4%BA%AB%E5%BA%93%E6%90%9C%E7%B4%A2%E8%B7%AF%E5%BE%84/</guid>
      <description>基本原理 -L编译选项是编译期间使用 LD_LIBRARY_PATH环境变量是运行期间使用，可以用来指定so的加载路径，并且优先级高于系统默认的</description>
    </item>
    
    <item>
      <title>函数重载及其匹配顺序</title>
      <link>https://devin0x01.github.io/post/cpp/%E5%87%BD%E6%95%B0%E9%87%8D%E8%BD%BD%E5%8F%8A%E5%85%B6%E5%8C%B9%E9%85%8D%E9%A1%BA%E5%BA%8F/</link>
      <pubDate>Sun, 18 Jun 2023 14:05:25 +0800</pubDate>
      
      <guid>https://devin0x01.github.io/post/cpp/%E5%87%BD%E6%95%B0%E9%87%8D%E8%BD%BD%E5%8F%8A%E5%85%B6%E5%8C%B9%E9%85%8D%E9%A1%BA%E5%BA%8F/</guid>
      <description>1.函数重载概念：同一个作用域内，同名函数，参数列表不同(参数个数、类型或顺序不同)。 与返回值类型没有关系。如果函数名和参数列表相同，无论返</description>
    </item>
    
    <item>
      <title>字符集与编码</title>
      <link>https://devin0x01.github.io/post/java/%E5%AD%97%E7%AC%A6%E9%9B%86%E4%B8%8E%E7%BC%96%E7%A0%81/</link>
      <pubDate>Sun, 18 Jun 2023 14:05:25 +0800</pubDate>
      
      <guid>https://devin0x01.github.io/post/java/%E5%AD%97%E7%AC%A6%E9%9B%86%E4%B8%8E%E7%BC%96%E7%A0%81/</guid>
      <description>术语 字符(character)是具有语义值的文本的最小单位。 字符集(character set)是可能由多种语言使用的字符的集合。例：拉丁语字</description>
    </item>
    
    <item>
      <title>调用拷贝构造函数的场景</title>
      <link>https://devin0x01.github.io/post/cpp/%E8%B0%83%E7%94%A8%E6%8B%B7%E8%B4%9D%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E7%9A%84%E5%9C%BA%E6%99%AF/</link>
      <pubDate>Sun, 18 Jun 2023 14:05:25 +0800</pubDate>
      
      <guid>https://devin0x01.github.io/post/cpp/%E8%B0%83%E7%94%A8%E6%8B%B7%E8%B4%9D%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E7%9A%84%E5%9C%BA%E6%99%AF/</guid>
      <description>1.默认构造函数默认构造函数是一个系统生成的，参数列表和函数体都为空的函数。 如果类中声明了默认构造函数（无论是否有参数），编译器便不再会为之</description>
    </item>
    
    <item>
      <title>重载、覆盖、隐藏</title>
      <link>https://devin0x01.github.io/post/cpp/%E9%87%8D%E8%BD%BD%E8%A6%86%E7%9B%96%E9%9A%90%E8%97%8F/</link>
      <pubDate>Sun, 18 Jun 2023 14:05:25 +0800</pubDate>
      
      <guid>https://devin0x01.github.io/post/cpp/%E9%87%8D%E8%BD%BD%E8%A6%86%E7%9B%96%E9%9A%90%E8%97%8F/</guid>
      <description>C++类层次中的同名函数，有三种关系： 1.重载**（overload）** 概念：相同的范围（同一个类）中的同名函数，参数列表不同。 1)与返回</description>
    </item>
    
    <item>
      <title>配置github pages教程</title>
      <link>https://devin0x01.github.io/post/tools/%E9%85%8D%E7%BD%AEgithub-pages%E6%95%99%E7%A8%8B/</link>
      <pubDate>Sat, 13 May 2023 14:05:25 +0800</pubDate>
      
      <guid>https://devin0x01.github.io/post/tools/%E9%85%8D%E7%BD%AEgithub-pages%E6%95%99%E7%A8%8B/</guid>
      <description>1.基础配置1mkdir myblog &amp;amp;&amp;amp; cd myblog 2hugo new site . 3 4git init 5git submodule add git@github.com:MeiK2333/github-style.git themes/github-style 6vim .gitignore 7git add . 8git push -u origin master git submodule 相关命令Git - 子模块 git submodule deinit 卸载子模块 - 知乎 Git submodule add: &amp;ldquo;a git directory is found</description>
    </item>
    
  </channel>
</rss>
